{"version":3,"sources":["images/pokemon.jpg","components/CreateBackup.js","components/PurgeBackup.js","components/HomePage.js","components/DisplayCard.js","components/SearchBackup.js","components/App.js","index.js"],"names":["module","exports","BackupButton","useState","alert","setAlert","message","setMessage","variant","setVariant","Button","size","className","onClick","event","Promise","all","fetch","then","responses","map","response","json","data","window","localStorage","setItem","JSON","stringify","cards","catch","error","Alert","show","defaultShow","onClose","dismissible","PurgeButton","removeItem","purge","SearchBackupButton","location","href","HomePage","class","Image","fluid","src","cover","Row","Col","md","DisplayCard","imageLink","this","props","Card","style","margin","alt","Component","SearchBackup","filterList","e","searchTerm","target","value","toLowerCase","updatedList","state","cardData","filter","cardInfo","name","includes","rarity","hp","setState","filterData","console","log","searchBox","Form","sm","Control","type","onChange","placeholder","Container","imageUrl","React","App","path","component","exact","withRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9684c86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokemon.aebaf22b.jpg\";","\nimport React, { useState } from 'react';\nimport {Alert, Button} from 'react-bootstrap';\n\n/**\n * This component creates the functionality for the 'Create Backup' button \n * by fetching data and storing it to local storage.\n */\n\nconst BackupButton = () => { \n  const [alert, setAlert] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [variant, setVariant] = useState(\"success\");\n\n  const persist = () => {\n    Promise.all([\n        fetch(\n            \"https://api.pokemontcg.io/v1/cards\"\n        ),\n    ])\n    .then((responses) => \n            Promise.all(responses.map((response) => response.json()))\n        )\n    .then((data) => {\n        window.localStorage.setItem(\"cardData\", JSON.stringify(data[0].cards));\n        setAlert(true);\n        setVariant(\"success\");\n        setMessage(\"Successful backup\");\n    })\n    .catch((error) => {\n      setAlert(true);\n      setVariant(\"danger\");\n      setMessage(error.message);\n    })\n  };\n\n  return (\n    <div>\n      <Button size=\"lg\" className=\"home-pg-btn\"  onClick={(event) => persist()}> Create Backup </Button>\n      <Alert variant={variant} show={alert} defaultShow={false} onClose={() => setAlert(false)} dismissible>\n        {message}\n      </Alert>\n    </div>\n    \n  )\n}\n\nexport default BackupButton;\n","import React, { useState } from 'react';\nimport {Alert, Button} from 'react-bootstrap';\n\n/**\n * This component creates the functionality for the 'Purge Backup' button \n * by removing data from the local storage.\n */\n\nconst PurgeButton = () => { \n    \n    const [alert, setAlert] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [variant, setVariant] = useState(\"success\");\n\n\n  const purge = () => {\n    try{\n        window.localStorage.removeItem(\"cardData\");\n        setAlert(true);\n        setVariant(\"success\");\n        setMessage(\"Successful backup deletion\");\n    } \n    catch(error){\n        setAlert(true);\n        setVariant(\"danger\");\n        setMessage(error.message);\n    }\n  };\n\n  return (\n      <div>\n        <Button size=\"lg\" className=\"home-pg-btn\" onClick={(event) => purge()}> Purge Backup </Button>\n        <Alert variant={variant} show={alert} defaultShow={false} onClose={() => setAlert(false)} dismissible>\n            {message}\n        </Alert>\n      </div>\n  )\n}\n\nexport default PurgeButton;\n","import React from \"react\";\nimport { Button, Col, Row, Image } from \"react-bootstrap\";\nimport cover from \"../images/pokemon.jpg\";\nimport BackupButton from \"./CreateBackup\";\nimport PurgeButton from \"./PurgeBackup\";\n\n/**\n * This component creates home page the \n * Search Backup button\n */\n\nconst SearchBackupButton = () => {\n    return(\n        <Button size=\"lg\" className=\"home-pg-btn\" onClick={(event) => (window.location.href = \"/search\")}> Search Backup</Button>\n    )\n}\n\nconst HomePage = () => {\n  return (\n    <div>\n        <div class=\"jumbotron jumbotron-fluid\">\n            <div class=\"container\">\n                <Image className=\"home-img\" fluid src={cover}/>\n                <h1 class=\"display-5\">Pokemon Card Backup</h1>\n                <p class=\"lead\">This is a web application that backs up pokemon card \n                data and allows you to search pokemon cards</p>\n                <p>Pick a button to get started</p>\n                <Row>\n                    <Col md=\"auto\">\n                        <BackupButton/>\n                    </Col>\n                    <Col md=\"auto\">\n                        <PurgeButton/>\n                    </Col>\n                    <Col md=\"auto\">\n                        <SearchBackupButton/>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n\n","import React, { Component } from 'react'\nimport {Card} from 'react-bootstrap'\nimport { Image, } from \"react-bootstrap\";\n\n/**\n * This component creates card containers for \n * each Pokemon card.\n */\nclass DisplayCard extends Component{\n\n  render(){\n    const {\n      imageLink,\n    }=this.props\n\n    return(\n      <Card style={{ margin:'0.5em'}}>  \n        <Image\n        src={imageLink}\n        alt=\"pokemon card\"/>\n      </Card>\n    )\n  }\n}\n\nexport default DisplayCard;\n","import React from 'react';\nimport {Row, Container, Col, Form} from \"react-bootstrap\";\nimport DisplayCard from \"../components/DisplayCard\"\n\n/**\n * This component handles the search functionality by\n * fetching card data from the database, filtering the data \n * and displaying the filtered results.\n */\nclass SearchBackup extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            cardData: [],\n            filterData: [],\n        }\n    }\n\n    componentDidMount(){\n        Promise.all([\n            fetch(\n                \"https://api.pokemontcg.io/v1/cards\"\n            ),\n        ])\n        .then((responses) => \n            Promise.all(responses.map((response) => response.json()))\n        )\n        .then((data) => {\n            console.log(data[0].cards);\n            this.setState({\n                cardData: data[0].cards,\n                filterData: data[0].cards,\n            });\n        })\n        .catch((error) => console.log(error));\n    }\n\n    filterList = e => {\n        const searchTerm = e.target.value.toLowerCase();\n        const updatedList = this.state.cardData.filter(cardInfo => \n            (cardInfo.name && cardInfo.name.toLowerCase().includes(searchTerm)) || \n            (cardInfo.rarity && cardInfo.rarity.toLowerCase().includes(searchTerm)) || \n            (cardInfo.hp && cardInfo.hp.includes(searchTerm))\n        );\n\n        this.setState({filterData: updatedList});\n\n    };\n\n    render(){\n        const searchBox = (\n            <div>\n                <Form>\n                    <Col md={8} sm={5}>\n                        <Form.Control className=\"search-box\" type=\"text\" onChange={this.filterList} placeholder=\"Search for a card\"/>\n                    </Col>\n                </Form>\n            </div>\n        );\n\n        return(\n            <div>\n                <h3 className=\"search-heading\"> Pokemon Card Search </h3>\n              {searchBox}\n                <Container>\n                    <Col>\n                        <Row>\n                            {this.state.filterData.map((value) => {\n                                return(\n                                    <DisplayCard\n                                    imageLink={value && value.imageUrl}\n                                    />\n                                )\n                            })}\n                        </Row>\n                    </Col>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default SearchBackup;","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../styles/index.css\";\nimport HomePage from '../components/HomePage';\nimport { Route, Switch } from \"react-router-dom\";\nimport SearchBackup from \"../components/SearchBackup\"\nimport { withRouter } from 'react-router-dom';\n\n/**\n * This component renders the whole application\n */\nclass App extends React.Component {\n  \n  render() {\n    return(\n      <div>\n        <main>\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact/>\n            <Route path=\"/search\" component={SearchBackup}/>\n          </Switch>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(App);\n","import ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\nimport React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}